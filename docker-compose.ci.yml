name: immich-prod

networks:
  traefik:
    external: true

services:
  immich-server:
    container_name: immich_server
    image: '${IMAGE_NAME}-server'
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE_NAME: ${DB_DATABASE_NAME}
      UPLOAD_LOCATION: ${UPLOAD_LOCATION}
      DB_DATA_LOCATION: ${DB_DATA_LOCATION}
      DB_USERNAME: ${DB_USERNAME}
      IMMICH_VERSION: ${IMMICH_VERSION}

    volumes:
      - ${UPLOAD_LOCATION}/photos:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    #ports:
    #  - 2283:2283

    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false

    labels:
      - 'traefik.http.routers.$COMPOSE_PROJECT_NAME-server.rule=Host(`$DEPLOY_URL`)'

      - 'traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-redirect-root.redirectregex.regex=^https?://${DEPLOY_URL}/?$$'
      - 'traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-redirect-root.redirectregex.replacement=https://${DEPLOY_URL}/publish'
      - 'traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-redirect-root.redirectregex.permanent=true'

      - 'traefik.http.routers.${COMPOSE_PROJECT_NAME}-server.middlewares=${COMPOSE_PROJECT_NAME}-redirect-root'

    networks:
      - traefik
      - default

  redis:
    container_name: immich_redis
    image: redis:6.2-alpine@sha256:2ba50e1ac3a0ea17b736ce9db2b0a9f6f8b85d4c27d5f5accc6a416d8f42c6d5
    healthcheck:
      test: redis-cli ping || exit 1
    labels:
      - "traefik.enable=false"
    restart: always

  database:
    container_name: immich_postgres
    image: tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      DB_DATABASE_NAME: ${DB_DATABASE_NAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${UPLOAD_LOCATION}/postgres:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"
    command: [ 'postgres', '-c', 'shared_preload_libraries=vectors.so', '-c', 'search_path="$$user", public, vectors', '-c', 'logging_collector=on', '-c', 'max_wal_size=2GB', '-c', 'shared_buffers=512MB', '-c', 'wal_compression=on' ]
    restart: always

volumes:
  model-cache:
  prometheus-data:
  grafana-data:
